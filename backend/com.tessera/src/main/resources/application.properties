# ===================================================================
# CONFIGURAÇÃO DO BANCO DE DADOS
# ===================================================================
# As variáveis de ambiente DB_HOST, DB_PORT, DB_NAME, DB_USERNAME e DB_PASSWORD
# são carregadas pelo Spring Boot automaticamente.
spring.datasource.url=jdbc:mysql://${DB_HOST:localhost}:${DB_PORT:3306}/${DB_NAME:tessera}?createDatabaseIfNotExist=true
spring.datasource.username=${DB_USERNAME:root}
spring.datasource.password=${DB_PASSWORD:}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# ===================================================================
# CONFIGURAÇÃO DO JPA/HIBERNATE
# ===================================================================
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=${SHOW_SQL:false}
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
# Remove os warnings de dialeto deprecado
spring.jpa.properties.hibernate.dialect.storage_engine=innodb
logging.level.org.hibernate.orm.deprecation=ERROR

# ===================================================================
# CONFIGURAÇÃO DE SEGURANÇA E JWT
# ===================================================================
# O segredo JWT e a expiração são carregados de variáveis de ambiente.
# Certifique-se de definir APP_JWT_SECRET em produção.
app.jwt.secret=${APP_JWT_SECRET:fallback-secret-key-for-development-only-is-very-long-and-secure}
# Expiração em milissegundos (ex: 86400000 = 24 horas)
app.jwt.expiration=${APP_JWT_EXPIRATION:86400000}

# ===================================================================
# CONFIGURAÇÃO DO SERVIDOR
# ===================================================================
server.port=${SERVER_PORT:8080}

# ===================================================================
# CONFIGURAÇÃO DE EMAIL
# ===================================================================
# As variáveis de ambiente MAIL_HOST, MAIL_PORT, MAIL_USERNAME, MAIL_PASSWORD
# são carregadas pelo Spring Boot automaticamente.
spring.mail.host=${MAIL_HOST:smtp.gmail.com}
spring.mail.port=${MAIL_PORT:587}
spring.mail.username=${MAIL_USERNAME:}
spring.mail.password=${MAIL_PASSWORD:}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
# Defina como 'false' em produção se não quiser testar a conexão na inicialização
spring.mail.test-connection=${MAIL_TEST_CONNECTION:false}

# ===================================================================
# PERFIS E LOGS
# ===================================================================
spring.profiles.active=${SPRING_PROFILES_ACTIVE:development}

logging.level.org.springframework.security=WARN
logging.level.com.tessera=INFO
logging.level.org.springframework.web=WARN

# ===================================================================
# CONFIGURAÇÃO DE BACKUP (SE HABILITADO)
# ===================================================================
tessera.backup.enabled=${BACKUP_ENABLED:true}
tessera.backup.path=${BACKUP_PATH:/backups}
tessera.backup.schedule=${BACKUP_SCHEDULE:0 0 2 * * *} 
tessera.backup.retention-days=${BACKUP_RETENTION_DAYS:30}
tessera.backup.mysqldump.path=${MYSQLDUMP_PATH:mysqldump}
# As credenciais de banco de dados são lidas das propriedades do spring.datasource